version: "3.8"

services:
  nginx:
#    image: nginx:1.18
    build: ./nginx
    container_name: nginx
#    volumes:
#      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#      - ./nginx/proxy_params:/etc/nginx/proxy_params
#      - ./static_content:/etc/nginx/static_content/
    ports:
      - "1337:80"
      - "443:443"
    depends_on:
      - backend

  backend:
    build: .
    container_name: bread-backend
#    command: gunicorn -w 1 -b 0.0.0.0:8000 --chdir ./src core.wsgi --timeout 60 --log-level debug --max-requests 10000
#    command: ./commands/wsgi_production.sh
#    command: ./commands/${BACKEND_SERVER}_${SERVER_MODE}.sh
#    command: make gunicorn-run
    command: make ${RUN_COMMAND}
    tty: true
    stdin_open: true
    restart: always
    ports:
    - "8001:8000"
    - "9000:9000"
    volumes:
    - ./src:/srv/project/src
    - ./tt:/tmp
#    depends_on:
#      - memcached
#      - rabbitmq
#      - postgres
    env_file: .env

#  memcached:
#    image: memcached:1.6.9
#    container_name: memcached
#    tty: true
#    stdin_open: true
#    restart: always
#
#  rabbitmq:
#    image: rabbitmq:3.8-rc-management
#    container_name: rabbitmq
#    tty: true
#    stdin_open: true
#    restart: always
#    env_file: .env
#    ports:
#      - "15672:15672"
#
#  celery:
#    build: .
#    container_name: celery
#    command: make celery-run
#    restart: always
#    env_file: .env
#    depends_on:
#      - rabbitmq
#    volumes:
#      - ./:/srv/project
#
#  celerybeat:
#    build: .
#    container_name: celerybeat
#    command: make celerybeat-run
#    restart: always
#    env_file: .env
#    depends_on:
#      - rabbitmq
#    volumes:
#      - ./:/srv/project
#
#  postgres:
#    image: postgres:12
#    container_name: bread-db
#    tty: true
#    stdin_open: true
#    restart: always
#    env_file: .env
#    ports:
#      - "5432:5432"
#    volumes:
#      - db_data:/var/lib/postgresql/data
#
#volumes:
#  db_data: {}

